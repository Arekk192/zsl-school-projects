### GET - get all photos
GET http://localhost:3000/api/photos HTTP/1.1

### GET - get 1 photo by id
GET http://localhost:3000/api/photos/1717149056513 HTTP/1.1

### DELETE - delete photo by id
DELETE http://localhost:3000/api/photos/1717149234043 HTTP/1.1

### PATCH - update photo by id
PATCH http://localhost:3000/api/photos HTTP/1.1
Content-Type: application/json

{
  "tags": ["tag1", "twojastara"]
}

### POST - upload new photo
POST http://localhost:3000/api/photos HTTP/1.1
Content-Type: multipart/form-data; boundary=----FormBoundary1234

------FormBoundary1234
Content-Disposition: form-data; name="file"; filename="image.jpg"
Content-Type: image/jpeg

< ./image.jpg

------FormBoundary1234
Content-Disposition: form-data; name="album"
Content-Type: text/plain

album
------FormBoundary1234


### pobranie wszystkich tagów bez konwersji na obiekty
GET http://localhost:3000/api/tags/raw 

### pobranie wszystkich tagów z konwersją na obiekty
GET http://localhost:3000/api/tags 

### pobranie jednego taga
GET http://localhost:3000/api/tags/2

### utworzenie nowego taga
POST http://localhost:3000/api/tags 
Content-Type: application/json

{
  "name": "nowytag",
  "popularity": 0
}

### aktualizacja danych zdjęcia o nowy tag
PATCH http://localhost:3000/api/photos/tags
Content-Type: application/json

{
  "photo_id": 1717170195004,
  "tag": "tag_jakis"
}

### aktualizacja danych zdjęcia o tablicę nowych tag-ów
PATCH http://localhost:3000/api/photos/tags/mass 
Content-Type: application/json

{
  "photo_id": 1717170195004,
  "tags": ["tag1", "twojastara"]
}

### pobranie tagów danego zdjęcia
GET http://localhost:3000/api/photos/tags/1717170195004
